스택 큐 메소드 구현
바이너리서치 어려운 부분 X
배열, 클래스 안봐도됨

자연 정렬 X 

검색 알고리즘 원리, 장단점과 차이
개선 여부 확인
-----
선형 검색과 보초법을 활용한 선형 검색, 이진 검색이 있음
선형 검색의 시간 복잡도 O(n) 이진 검색의 시간 복잡도 O(log n)
선형 검색은 정렬 필요 X 이진 검색은 반드시 정렬
선형 검색 - 구현 난이도 쉬움, 데이터가 적을 때 유리
이진 검색 - 구현 난이도 어려움, 데이터가 많을 때 유리

재귀 원리
반복문 <-> 함수 구현

recur(int n)
{
    if(n < 0)
    recur(n - 1);
    system.out.println(n)
    recur(n - 2);
}

recur(int n)
{
    while(true)
    {
        if(n > 0)
        {
            s.push(n);
            n = n - 1;
            continue;
        }
        if(!isEmpty)
        {
            s.pop(n);
            system.out.println(n);
            n = n - 2;
        }
    }
}


단순 교환 단순 선택 단순 삽입
셸 정렬
-----
버블 정렬
- 맨 뒤 인덱스부터 앞으로 한칸씩 전진하면서 앞 인덱스를 비교함
- 순회를 마치고 가장 첫번 째 인덱스에 도달 할 경우 첫번째는 정렬 되었다보고 i를 증가시킴
선택 정렬
- 먼저 반복문으로 가장 작은 값을 찾고 찾은 값을 min으로 설정한 인덱스에 값을 집어넣음
- 그렇게 i값을 증가시키며 뒤로 한칸씩 전진
삽입 정렬
- 두번째 인덱스를 저장
- 현재 값이 0보다 크고 현재값 - 1이 저장한 값보다 작을경우 감소시키며 앞으로 한칸씩 전진
- 현재 값을 앞으로 배치하며 앞에 있던 값들이 한칸 씩 밀림
셸 정렬
- 간격 형식을 정한 정렬
- 0,4 - 1,5 - 2,6 ... 0,2 - 1,3 - 2,4 ... 0,1 - 1,2 - 2,3